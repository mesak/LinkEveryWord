name: Unified Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  sync-versions:
    name: Sync Versions
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      version_tag: ${{ steps.get-version.outputs.version_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get Version from Tag
        id: get-version
        run: |
          VERSION_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION_TAG#v}
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Chrome Extension Version
        working-directory: chrome-extension
        run: |
          npm version ${{ steps.get-version.outputs.version }} --no-git-tag-version --allow-same-version

      - name: Update Web Version
        working-directory: web
        run: |
          npm version ${{ steps.get-version.outputs.version }} --no-git-tag-version --allow-same-version

      - name: Upload Source for Build Jobs
        uses: actions/upload-artifact@v4
        with:
          name: source-code
          path: .
          retention-days: 1

  release-desktop:
    name: Build and Release Desktop App
    needs: sync-versions
    runs-on: windows-latest
    env:
      WORKING_DIR: desktop-app
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code
          path: .

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Update Version Info from Tag
        id: version-updater
        shell: pwsh
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          $version = "${{ needs.sync-versions.outputs.version }}"
          $fileVersion = "$version.0"
          $filevers_tuple = "($($version.Replace('.', ', ')), 0)"
          $version_file = "version_info.txt"
          $content = Get-Content $version_file -Raw
          $content = $content -replace "filevers=\(1, 0, 0, 0\)", "filevers=$filevers_tuple"
          $content = $content -replace "prodvers=\(1, 0, 0, 0\)", "prodvers=$filevers_tuple"
          $content = $content -replace "StringStruct\(u'FileVersion', u'1.0.0.0'\)", "StringStruct(u'FileVersion', u'$fileVersion')"
          $content = $content -replace "StringStruct\(u'ProductVersion', u'1.0.0.0'\)", "StringStruct(u'ProductVersion', u'$fileVersion')"
          Set-Content -Path $version_file -Value $content -Encoding UTF8
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Install build dependencies
        shell: pwsh
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        shell: pwsh
        working-directory: ${{ env.WORKING_DIR }}
        run: python -m PyInstaller --clean app_standalone.spec

      - name: Prepare release artifacts
        id: prep
        shell: pwsh
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          $version = "${{ steps.version-updater.outputs.version }}"
          $zipName = "EverythingFlaskSearch-v$version-win64.zip"
          Compress-Archive -Path "dist/EverythingFlaskSearch.exe", "README.md" -DestinationPath $zipName -Force
          echo "zip_name=$zipName" >> $env:GITHUB_OUTPUT

      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-release-asset
          path: ${{ env.WORKING_DIR }}/${{ steps.prep.outputs.zip_name }}
          retention-days: 1

  release-chrome:
    name: Build and Release Chrome Extension
    needs: sync-versions
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chrome-extension
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: chrome-extension/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build and Package Extension
        run: |
          npm run build
          npm run package

      - name: Upload Chrome Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-release-asset
          path: chrome-extension/build/chrome-mv3-prod.zip
          retention-days: 1

  deploy-web:
    name: Deploy Web to Cloudflare
    needs: sync-versions
    runs-on: ubuntu-latest
    steps:
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: source-code
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: web
          command: pages deploy . --project-name=linkeveryword-web

  create-github-release:
    name: Create GitHub Release
    needs: [release-desktop, release-chrome]
    runs-on: ubuntu-latest
    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.sync-versions.outputs.version_tag }}
          name: Release ${{ needs.sync-versions.outputs.version_tag }}
          body: |
            Unified release for version ${{ needs.sync-versions.outputs.version }}.

            This release includes:
            - Desktop Application (Windows)
            - Chrome Extension
            - Website Deployment
          files: |
            release-assets/desktop-release-asset/*
            release-assets/chrome-release-asset/*
